when we configure this server:
    we have source folders
        each source folder has:
            scannerService - responsible with going through the folder and
                obtaining data about posts
            a list of parser/template pairs - responsible with interpreting
                post sections and putting them in a contents list (another model)
            a master template - will take all contents and put them in the final
                web page
    each source folder has an associated posts handler that serves the post pages
    each source folder also has an associated resources handler

    we also have pages
        well, the main page for now

need some way to define parsers (or metion what parses we will use and initialise
    them) in config files
    see spring config files
    see how we can reload spring context periodically

rescan content folder periodically (reload)

build a tree of parsers and templates in config files and apply that processing tree
    on content folders

add styles


SourceService
    scans sources and returns a list of posts
    caching and periodic rescanning
    configuration: a list of source folders

BuilderService
    takes a post and assembles it into a HtmlPage
    configuration: a collection of parsers and templates associated with processor names

design UI
    http://en.wikipedia.org/wiki/Responsive_web_desig
    http://blog.teamtreehouse.com/beginners-guide-to-responsive-web-design
    http://alistapart.com/article/responsive-web-design
    http://unstoppablerobotninja.com/entry/fluid-images
    http://alistapart.com/article/fluidgrids



http://localhost:8080/filterPrevious?type=and&tag=comic&year=2014&month=12&day=25&hour=10&minute=0&title=holiday%20curse


home page
    a list of posts ordered by most recent
    possibility to load more (dynamic loading)
    possibility to filter them by tags
clicking on a post opens the post page
    display post header
    header contains filter
    display post title and tags
    posibility to edit filter
    posibility to navigate to previous/next post according to current filter
    how is this filter saved? in URL? in cookies?
JSON apis:
    get posts (filter)
    get top posts (filter)
    get next post (filter)
    get previous post (filter)

focus plan:
    [x] home page:
        [x] header with site name
        [x] list posts with date and tags
    [x] post page:
        [x] header with link to home page, next post and previous post
        [x] list post name and tags (in title)
        [x] list post
    [ ] file name parser
        [ ] add creation and last modified date to post
        [ ] simpler ways to parse dates from file name
        [ ] simpler ways to parse tags from file name
        [ ] simpler way to parse title from file name
    [ ] post service:
        [ ] periodically refresh post information
    [ ] last design overview
        [ ] make a tiled home page interface
        [ ] update tile sizes with media queries
        [ ] make sure post titles are always visible, no hover changes (for touch-screen)
        [ ] sample colors from adventure time

    [ ] add new parsers
    [ ] plugin
        [ ] configure sources, parsers based on cofiguration files
        [ ] allow plugin functionality for sources
        [ ] allow plugin functionality for parsers (dynamic class loading)
        [ ] trigger update manually while server is running (a special request?)
